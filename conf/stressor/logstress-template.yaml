apiVersion: v1
kind: Template
metadata:
  name: logstress
objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: stress-service-account
#
# Deployment replicas of heavy-log-stress pods
#
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: heavy-log-stress
  spec:
    replicas: ${{number_heavy_stress_containers}}
    selector:
      matchLabels:
        app: heavy-log-stress
    template:
      metadata:
        labels:
          app: heavy-log-stress
          type: log-stressor
      spec:
        serviceAccountName: stress-service-account
        containers:
        - image: ${log_stressor_image}
          securityContext:
            runAsUser: 0
            privileged: true
            allowPrivilegeEscalation: true
          imagePullPolicy: Always
          name: heavy-log-stress
          args:
            - generate 
            - --log-lines-rate=${heavy_containers_msg_per_sec}
            - --source=${use_log_samples}
          restartPolicy: Always
#
#
# Deployment replicas of low-log-stress pods
#
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: low-log-stress
  spec:
    replicas: ${{number_low_stress_containers}}
    selector:
      matchLabels:
        app: low-log-stress
    template:
      metadata:
        labels:
          app: low-log-stress
          type: log-stressor
      spec:
        serviceAccountName: stress-service-account
        containers:
        - image: ${log_stressor_image}
          securityContext:
            runAsUser: 0
            privileged: true
            allowPrivilegeEscalation: true
          imagePullPolicy: Always
          name: low-log-stress
          args:
            - generate 
            - --log-lines-rate=${low_containers_msg_per_sec}
            - --source=${use_log_samples}
          restartPolicy: Always
parameters:
- name: number_heavy_stress_containers
- name: heavy_containers_msg_per_sec
- name: number_low_stress_containers
- name: low_containers_msg_per_sec
- name: use_log_samples
- name: log_stressor_image